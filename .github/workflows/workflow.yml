name: Build

on:
  push:
    branches:
      - master
      - dev
    tags:
      - 'v*.*.*'
    paths-ignore:
      - .dockerignore
      - .gitignore
      - Dockerfile
      - LICENSE
      - README.md
      - demo-media/*
  pull_request:
    branches:
      - master
      - dev

env:
  JAVA_VERSION: '14.0.2'
  TEST_SCREEN_WIDTH: '1920'
  TEST_SCREEN_HEIGHT: '1080'

jobs:
  Build-and-Test-Windows:
    runs-on: windows-latest
    name: Build and Test (Windows)
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Verify Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build
        run: ./gradlew --info --stacktrace build -x test
      - name: Test setup
        run: |
          choco install -y change-screen-resolution
          changescreenresolution $TEST_SCREEN_WIDTH $TEST_SCREEN_HEIGHT
      - name: Test
        id: test
        run: ./gradlew --info --stacktrace test
      - name: Upload failed test screenshots
        uses: actions/upload-artifact@v2
        if: steps.test.outcome == 'failure'
        with:
          name: failed-test-screenshots-windows
          path: build/test-screenshots
      - name: Publish coverage report
        uses: codecov/codecov-action@v1
        env:
          OS: Windows
        with:
          directory: build/reports/
          env_vars: OS
      - name: Jpackage
        run: ./gradlew --info --stacktrace jpackage
      - name: Upload installer (exe)
        uses: actions/upload-artifact@v2
        with:
          name: boundingboxeditor-installer-windows-exe
          path: build/jpackage/*.exe
      - name: Upload image
        uses: actions/upload-artifact@v2
        with:
          name: boundingboxeditor-portable-windows
          path: build/jpackage/BoundingBoxEditor
      - name: Sonarqube analysis
        run: ./gradlew sonarqube '-Dsonar.host.url=https://sonarcloud.io' '-Dsonar.login=${{ secrets.SONAR_TOKEN }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Build-and-Test-Linux:
    runs-on: ubuntu-latest
    name: Build and Test (Linux)
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Verify Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build
        run: ./gradlew --info --stacktrace build -x test
      - name: Test setup
        run: |
          sudo apt-get install xvfb fluxbox
          Xvfb :10 -screen 0 ${TEST_SCREEN_WIDTH}x${TEST_SCREEN_HEIGHT}x24 &
          fluxbox -display :10 &
      - name: Test
        id: test
        run: DISPLAY=:10 ./gradlew --stacktrace --info test
      - name: Upload failed test screenshots
        uses: actions/upload-artifact@v2
        if: steps.test.outcome == 'failure'
        with:
          name: failed-test-screenshots-linux
          path: build/test-screenshots
      - name: Publish coverage report
        uses: codecov/codecov-action@v1
        env:
          OS: Linux
        with:
          directory: build/reports/
          env_vars: OS
      - name: Jpackage
        run: ./gradlew --info --stacktrace jpackage
      - name: Upload installer (deb)
        uses: actions/upload-artifact@v2
        with:
          name: boundingboxeditor-installer-linux-deb
          path: build/jpackage/*.deb
      - name: Upload installer (rpm)
        uses: actions/upload-artifact@v2
        with:
          name: boundingboxeditor-installer-linux-rpm
          path: build/jpackage/*.rpm
      - name: Upload image
        uses: actions/upload-artifact@v2
        with:
          name: boundingboxeditor-portable-linux
          path: build/jpackage/BoundingBoxEditor
  Build-and-Test-macOS:
    runs-on: macOS-latest
    name: Build and Test (macOS)
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Verify Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build
        run: ./gradlew --info --stacktrace build -x test
      - name: Test setup
        run: |
          "/Library/Application Support/VMware Tools/vmware-resolutionSet" $TEST_SCREEN_WIDTH $TEST_SCREEN_HEIGHT
      - name: Test
        id: test
        run: ./gradlew --info --stacktrace test
      - name: Publish coverage report
        uses: codecov/codecov-action@v1
        env:
          OS: macOS
        with:
          directory: build/reports/
          env_vars: OS
      - name: Jpackage
        run: ./gradlew --info --stacktrace jpackage
      - name: Upload installer (dmg)
        uses: actions/upload-artifact@v2
        with:
          name: boundingboxeditor-installer-macos-dmg
          path: build/jpackage/*.dmg
      - name: Upload image
        uses: actions/upload-artifact@v2
        with:
          name: boundingboxeditor-portable-macos
          path: build/jpackage/BoundingBoxEditor.app
  Release:
    needs: [Build-and-Test-Windows, Build-and-Test-Linux, Build-and-Test-macOS]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    name: Github Release
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create changelog
        id: changelog
        run: |
          commitlist="$(git log --pretty=format:"* %H %s" $(git describe --tags --abbrev=0 @^)..@)"
          commitlist="${commitlist//'%'/'%25'}"
          commitlist="${commitlist//$'\n'/'%0A'}"
          commitlist="${commitlist//$'\r'/'%0D'}"
          echo "::set-output name=body::$commitlist"
      - name: Download all build artifacts
        uses: actions/download-artifact@v2
      - name: Zip artifacts
        run: |
          for artifact_dir in $(find $PWD/* -maxdepth 0 -type d -name "boundingboxeditor*")
          do
            cd $artifact_dir
            zip -r $artifact_dir *
          done
      - name: Release to github
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            ## Changes:

            ${{ steps.changelog.outputs.body }}
          files: boundingboxeditor*.zip
